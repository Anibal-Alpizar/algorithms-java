/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.algorithms.UI;

import com.mycompany.algorithms.Layers.BLL.BLLEvent;
import com.mycompany.algorithms.Layers.Entities.Event;
import java.time.YearMonth;
import java.util.Calendar;
import java.util.LinkedList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author anibal
 */
public class frmSearchEvent extends javax.swing.JFrame {

    private LinkedList<Event> eventosEncontrados;

    /**
     * Creates new form frmSearchEvent
     */
    public frmSearchEvent() {
        initComponents();
        llenarAnios();
        llenarMeses();
        inicializarTabla();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblYear = new javax.swing.JLabel();
        lblMonth = new javax.swing.JLabel();
        drpMonth = new javax.swing.JComboBox<>();
        drpYears = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblEventsSearched = new javax.swing.JTable();
        btnSearch = new javax.swing.JButton();
        btnEditSomeOne = new javax.swing.JButton();
        btnRecursion = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblYear.setText("Year");

        lblMonth.setText("Month");

        tblEventsSearched.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblEventsSearched.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblEventsSearchedMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblEventsSearched);

        btnSearch.setText("Seach NOW!");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        btnEditSomeOne.setText("Editar Alguno");
        btnEditSomeOne.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditSomeOneActionPerformed(evt);
            }
        });

        btnRecursion.setText("Recursion");
        btnRecursion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRecursionActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(65, 65, 65)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblYear)
                    .addComponent(drpYears, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(drpMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblMonth))
                .addGap(103, 103, 103))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 432, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(84, 84, 84)
                        .addComponent(btnSearch)
                        .addGap(37, 37, 37)
                        .addComponent(btnEditSomeOne))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(157, 157, 157)
                        .addComponent(btnRecursion)))
                .addContainerGap(16, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(72, 72, 72)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblYear)
                    .addComponent(lblMonth))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(drpYears, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(drpMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSearch)
                    .addComponent(btnEditSomeOne))
                .addGap(29, 29, 29)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 335, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45)
                .addComponent(btnRecursion)
                .addContainerGap(116, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        int selectedYear = Integer.parseInt(drpYears.getSelectedItem().toString());
        int selectedMonth = drpMonth.getSelectedIndex() + 1; // Sumamos 1 porque los meses van de 1 a 12

        eventosEncontrados = BLLEvent.obtenerEventosPorFecha(selectedYear, selectedMonth);

        mostrarEventosEnTabla(eventosEncontrados);

        mostrarMensajeEventosEncontrados(eventosEncontrados.size());
    }//GEN-LAST:event_btnSearchActionPerformed

    private void tblEventsSearchedMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblEventsSearchedMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_tblEventsSearchedMouseClicked

    private void btnEditSomeOneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditSomeOneActionPerformed
        int selectedRow = tblEventsSearched.getSelectedRow();
        System.out.println(selectedRow);

        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Por favor, selecciona un evento para editar.", "Advertencia", JOptionPane.WARNING_MESSAGE);
            return;
        }

        Event selectedEvent = eventosEncontrados.get(selectedRow);

        int option = JOptionPane.showConfirmDialog(this,
                "¿Quieres editar el evento seleccionado?", "Confirmar edición",
                JOptionPane.YES_NO_OPTION);

        if (option == JOptionPane.YES_OPTION) {
            frmCreateEvent createEventForm = new frmCreateEvent(selectedEvent);
            createEventForm.setVisible(true);
            createEventForm.setLocationRelativeTo(this);
        }
    }//GEN-LAST:event_btnEditSomeOneActionPerformed

    private void btnRecursionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRecursionActionPerformed
       frmRecursion recursion = new frmRecursion();
       recursion.setVisible(true);
       recursion.setLocationRelativeTo(null);
       this.dispose();       
    }//GEN-LAST:event_btnRecursionActionPerformed

    private void mostrarMensajeEventosEncontrados(int cantidadEventos) {
        String mensaje;
        if (cantidadEventos > 0) {
            mensaje = "Eventos encontrados: " + cantidadEventos;
        } else {
            mensaje = "No se encontraron eventos para la fecha seleccionada.";
        }

        JOptionPane.showMessageDialog(this, mensaje, "Resultados de la búsqueda", JOptionPane.INFORMATION_MESSAGE);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmSearchEvent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmSearchEvent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmSearchEvent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmSearchEvent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmSearchEvent().setVisible(true);
            }
        });
    }

    private void inicializarTabla() {
        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("ID");
        model.addColumn("Year");
        model.addColumn("Month");
        model.addColumn("Day");
        model.addColumn("Team A");
        model.addColumn("Team B");
        model.addColumn("Sport");
        model.addColumn("Competition Name");
        model.addColumn("Competition Country");
        model.addColumn("Hour");

        tblEventsSearched.setModel(model);
    }

    private void llenarMeses() {
        String[] meses = {"Enero", "Febrero", "Marzo", "Abril", "Mayo", "Junio",
            "Julio", "Agosto", "Septiembre", "Octubre", "Noviembre", "Diciembre"};

        for (String mes : meses) {
            drpMonth.addItem(mes);
        }
    }

    private void llenarAnios() {
        Calendar calendar = Calendar.getInstance();
        int anioActual = calendar.get(Calendar.YEAR);

        for (int anio = 1990; anio <= anioActual; anio++) {
            drpYears.addItem(String.valueOf(anio));
        }
    }

    private void mostrarEventosEnTabla(LinkedList<Event> eventos) {
        limpiarTabla();

        DefaultTableModel model = (DefaultTableModel) tblEventsSearched.getModel();

        for (Event evento : eventos) {
            
            model.addRow(new Object[]{
                evento.getId(),
                evento.getYear(),
                evento.getMonth(),
                evento.getDay(),
                evento.getTeamA(),
                evento.getTeamB(),
                evento.getSport(),
                evento.getCompetitionName(),
                evento.getCompetitionCountry(),
                evento.getHour()
            });
        }
    }

    private void limpiarTabla() {
        DefaultTableModel model = (DefaultTableModel) tblEventsSearched.getModel();
        model.setRowCount(0); 
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEditSomeOne;
    private javax.swing.JButton btnRecursion;
    private javax.swing.JButton btnSearch;
    private javax.swing.JComboBox<String> drpMonth;
    private javax.swing.JComboBox<String> drpYears;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblMonth;
    private javax.swing.JLabel lblYear;
    private javax.swing.JTable tblEventsSearched;
    // End of variables declaration//GEN-END:variables
}
