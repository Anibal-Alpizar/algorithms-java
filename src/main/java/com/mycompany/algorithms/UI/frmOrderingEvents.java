/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.algorithms.UI;

import com.mycompany.algorithms.Layers.BLL.BLLEvent;
import com.mycompany.algorithms.Layers.Entities.Event;
import java.util.Arrays;
import java.util.LinkedList;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author anibal
 */
public class frmOrderingEvents extends javax.swing.JFrame {

    private LinkedList<Event> eventsList;

    /**
     * Creates new form frmOrderingEvents
     */
    public frmOrderingEvents() {
        initComponents();
        eventsList = BLLEvent.obtenerEventos();
        cargarDatosTabla(eventsList);
    }

    private void cargarDatosTabla(LinkedList<Event> eventos) {
        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("ID");
        model.addColumn("Year");
        model.addColumn("Month");
        model.addColumn("Day");
        model.addColumn("Team A");
        model.addColumn("Team B");
        model.addColumn("Sport");
        model.addColumn("Competition Name");
        model.addColumn("Competition Country");
        model.addColumn("Hour");

        for (Event evento : eventos) {
            model.addRow(new Object[]{
                evento.getId(),
                evento.getYear(),
                evento.getMonth(),
                evento.getDay(),
                evento.getTeamA(),
                evento.getTeamB(),
                evento.getSport(),
                evento.getCompetitionName(),
                evento.getCompetitionCountry(),
                evento.getHour()
            });
        }

        tblOrderingEvents.setModel(model);
    }

    private void ordenarYMostrar(String sortBy) {
        Event[] eventosArray = eventsList.toArray(new Event[0]);

        if (jrbQuickSort.isSelected()) {
            quickSort(eventosArray, 0, eventosArray.length - 1, sortBy);
        } else if (jrbSelection.isSelected()) {
            selectionSearch(eventosArray, sortBy);
        }

        cargarDatosTabla(new LinkedList<>(Arrays.asList(eventosArray)));
    }

    private void quickSort(Event[] arr, int low, int high, String sortBy) {
        if (low < high) {
            int pi = partition(arr, low, high, sortBy);

            quickSort(arr, low, pi - 1, sortBy);
            quickSort(arr, pi + 1, high, sortBy);
        }
    }

    private int partition(Event[] arr, int low, int high, String sortBy) {
        String pivot;
        if (sortBy.equals("Team A")) {
            pivot = arr[high].getTeamA();
        } else {
            pivot = arr[high].getTeamB();
        }

        int i = low - 1;
        for (int j = low; j < high; j++) {
            String current;
            if (sortBy.equals("Team A")) {
                current = arr[j].getTeamA();
            } else {
                current = arr[j].getTeamB();
            }

            if (current.compareTo(pivot) >= 0) {
                i++;

                Event temp = arr[i];
                arr[i] = arr[j];
                arr[j] = temp;
            }
        }

        Event temp = arr[i + 1];
        arr[i + 1] = arr[high];
        arr[high] = temp;

        return i + 1;
    }

    // 
    private void buscarYMostrar(String sortBy) {
        Event[] eventosArray = eventsList.toArray(new Event[0]);

        selectionSearch(eventosArray, sortBy);

        cargarDatosTabla(new LinkedList<>(Arrays.asList(eventosArray)));
    }

    private void selectionSearch(Event[] arr, String sortBy) {
        int n = arr.length;

        for (int i = 0; i < n - 1; i++) {
            int minIndex = i;
            for (int j = i + 1; j < n; j++) {
                String current;
                String minValue;

                if (sortBy.equals("Team A")) {
                    current = arr[j].getTeamA();
                    minValue = arr[minIndex].getTeamA();
                } else {
                    current = arr[j].getTeamB();
                    minValue = arr[minIndex].getTeamB();
                }

                if (current.compareTo(minValue) > 0) {
                    minIndex = j;
                }
            }

            Event temp = arr[minIndex];
            arr[minIndex] = arr[i];
            arr[i] = temp;
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup4 = new javax.swing.ButtonGroup();
        jrbQuickSort = new javax.swing.JRadioButton();
        jrbSelection = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblOrderingEvents = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        btnOrderByTeamB = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        buttonGroup4.add(jrbQuickSort);
        jrbQuickSort.setText("QuickSort");
        jrbQuickSort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbQuickSortActionPerformed(evt);
            }
        });

        buttonGroup4.add(jrbSelection);
        jrbSelection.setText("Selection");
        jrbSelection.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbSelectionActionPerformed(evt);
            }
        });

        tblOrderingEvents.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblOrderingEvents);

        jButton1.setText("Team A");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        btnOrderByTeamB.setText("Team B");
        btnOrderByTeamB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOrderByTeamBActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(97, 97, 97)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnOrderByTeamB)
                .addGap(134, 134, 134))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 506, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(225, 225, 225)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jrbQuickSort)
                            .addComponent(jrbSelection))))
                .addContainerGap(17, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jrbQuickSort)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jrbSelection)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(btnOrderByTeamB))
                .addContainerGap(114, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jrbQuickSortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbQuickSortActionPerformed
        // TODO add your handling code here:
        //ordenarYMostrar();
    }//GEN-LAST:event_jrbQuickSortActionPerformed

    private void jrbSelectionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbSelectionActionPerformed
        // TODO add your handling code here:
        //ordenarYMostrar();
    }//GEN-LAST:event_jrbSelectionActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // Ordenar por "Team A"
        ordenarYMostrar("Team A");
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnOrderByTeamBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOrderByTeamBActionPerformed
        // TODO add your handling code here:
        ordenarYMostrar("Team B");

    }//GEN-LAST:event_btnOrderByTeamBActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmOrderingEvents.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmOrderingEvents.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmOrderingEvents.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmOrderingEvents.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmOrderingEvents().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnOrderByTeamB;
    private javax.swing.ButtonGroup buttonGroup4;
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton jrbQuickSort;
    private javax.swing.JRadioButton jrbSelection;
    private javax.swing.JTable tblOrderingEvents;
    // End of variables declaration//GEN-END:variables
}
